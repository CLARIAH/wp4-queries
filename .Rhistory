lapply(list(Nas.1500, Nas.1650, Nas.1800, Nas.1900, Nas.1950, Nas.2000), function(x) draw.lar.group(x, 300))
lapply(list("Nas.1500", "Nas.1650", "Nas.1800", "Nas.1900", "Nas.1950", "Nas.2000"), function(x) draw.lar.group(x, 300))
lapply(list("Nas.1500", "Nas.1650", "Nas.1800", "Nas.1900", "Nas.1950", "Nas.2000"), function(x) draw.lar.group(x, 300))
draw.lar.group(Nas.1500)
draw.lar(Nas.1500)
Nas.2000 <- df2[df2$bm_year == 2000, ]
dev.off()
draw.lar(Nas.2000)
E16txt <- sapply(e16, function(x) x$getText())
install.packages("twitteR")
library(twitteR)
install.packages("tm")
library(tm)
install.packages("wordcloud")
library(wordcloud)
install.packages("xts")
library(xts)
library(Hmisc)
library(ggplot2)
library(parallel)
# setup
consumer_key <- "0NGGURaWh9GiBTATNSJpTcghh"
consumer_secret <- "hZ5a8fIX6vZtO8tx1ZcAVcLBgFbJHj8geF82eXdCkM8q80qM2w"
access_token <- "177699152-gbdfqlMFBtOHUCUARokI3viIbiTuKcMhXuy34ZsE"
access_secret <- "wlnwfCS8Fu9SkMQ6ciiuJ5v1pkLnT71rifIIj6r1YIn9v"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
install.packages("twitteR")
library(twitteR)
install.packages("tm")
library(tm)
install.packages("wordcloud")
library(wordcloud)
install.packages("xts")
library(xts)
library(Hmisc)
library(ggplot2)
library(parallel)
# setup
consumer_key <- "0NGGURaWh9GiBTATNSJpTcghh"
consumer_secret <- "hZ5a8fIX6vZtO8tx1ZcAVcLBgFbJHj8geF82eXdCkM8q80qM2w"
access_token <- "177699152-gbdfqlMFBtOHUCUARokI3viIbiTuKcMhXuy34ZsE"
access_secret <- "wlnwfCS8Fu9SkMQ6ciiuJ5v1pkLnT71rifIIj6r1YIn9v"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library(twitteR)
#install.packages("tm")
library(tm)
#install.packages("wordcloud")
library(wordcloud)
#install.packages("xts")
library(xts)
library(Hmisc)
library(ggplot2)
library(parallel)
# setup
consumer_key <- "0NGGURaWh9GiBTATNSJpTcghh"
consumer_secret <- "hZ5a8fIX6vZtO8tx1ZcAVcLBgFbJHj8geF82eXdCkM8q80qM2w"
access_token <- "177699152-gbdfqlMFBtOHUCUARokI3viIbiTuKcMhXuy34ZsE"
access_secret <- "wlnwfCS8Fu9SkMQ6ciiuJ5v1pkLnT71rifIIj6r1YIn9v"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
rm(list=ls())
library(twitteR)
#install.packages("tm")
library(tm)
#install.packages("wordcloud")
library(wordcloud)
#install.packages("xts")
library(xts)
library(Hmisc)
library(ggplot2)
library(parallel)
# setup
consumer_key <- "0NGGURaWh9GiBTATNSJpTcghh"
consumer_secret <- "hZ5a8fIX6vZtO8tx1ZcAVcLBgFbJHj8geF82eXdCkM8q80qM2w"
access_token <- "177699152-gbdfqlMFBtOHUCUARokI3viIbiTuKcMhXuy34ZsE"
access_secret <- "wlnwfCS8Fu9SkMQ6ciiuJ5v1pkLnT71rifIIj6r1YIn9v"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
e16 <- searchTwitter("#ESSHC2016", n = 100, since = "2016-03-25", until = "2016-04-03")
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
e16 <- searchTwitter("#ESSHC2016", since = "2016-03-25", until = "2016-04-03")
e16 <- searchTwitter("#ESSHC2016", since = "2016-03-25")
e16 <- searchTwitter("#ESSHC2016")
e16 <- searchTwitter("ESSHC2016")
e16 <- searchTwitter("#ESSHC2016", n = 1000000, since = "2016-03-25", until = "2016-04-03")
e16 <- searchTwitter("#ESSHC2016", n = 3990, since = "2016-03-25", until = "2016-04-03")
e16t <- sapply(e16, function(x) x$getCreated())
tail(e16t)
table(e16t)
class(e16t) = c('POSIXt','POSIXct')
e16t <- sapply(e16, function(x) x$getCreated())
tail(e16t)
table(e16t)
class(e16t) = c('POSIXt','POSIXct')
e16td <- trunc.POSIXt(e16t, units = "days")
plot(e16td)
plot(table(as.character(E16td)))
plot(table(as.character(e16td)))
hist(table(as.character(e16td)))
E16txt <- sapply(e16, function(x) x$getText())
E16txt[1:3]
E16cor <- Corpus(VectorSource(E16txt))
E16cor <- tm_map(E16cor, removePunctuation)
E16cor <- tm_map(E16cor, content_transformer(tolower))
E16cor <- Corpus(VectorSource(E16txt))
E16cor <- tm_map(E16cor, removePunctuation)
wordcloud(E16cor, random.order = FALSE, max.words = 10, scale = c(4, 1), colors = rainbow(10))
inspect(E16cor[1])
###
ability_modifier <- 5
proficiency_bonus <- 2
wisdom_modifier <- 3
level <- 3
spellcasting_ability <- proficiency_bonus + wisdom_modifier
spell_save_DC <- 8 + spellcasting_ability
##
d4 <- function(x) {
sample(1:4, x, replace = TRUE)
}
d6 <- function(x) {
sample(1:6, x, replace = TRUE)
}
d6(4)
d8 <- function(x) {
sample(1:8, x, replace = TRUE)
}
d10 <- function(x) {
sample(1:10, x, replace = TRUE)
}
d12 <- function(x) {
sample(1:12, x, replace = TRUE)
}
d20 <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
d100 <- function(x=1) {
sample(1:100, x, replace = TRUE)
}
sam <- d20() + pb + wis
mace <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:6, x, replace = TRUE)
}
paste0("You attack for ", attack(), ", and do ", damage(), " points damage.")
#paste0(attack(), damage())
}
mace()
hammer <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:10, x, replace = TRUE)
}
paste0("You attack for ", attack(), ", and do ", damage(), " points damage.")
#paste0(attack(), damage())
}
hammer()n
save_strength <- d20() + 1
save_dexterity <- d20() + 2
save_constitution <- d20() + 2
save_intelligence <- d20() + 2
save_wisdom <- d20() + 3 + proficiency_bonus
save_charisma <- d20() + 3 + proficiency_bonus
healing_word <- function() {
sum(sample(1:4, level, replace = TRUE)) + spellcasting_ability
}
healing_word()
cure_wounds <- function() {
sum(sample(1:8, level, replace = TRUE)) + ability_modifier
}
guiding_bolt <- function(spell_level = 1) {
#spell_level <- 1
attack <- function() {
sample(1:20, 1, replace = TRUE) + spellcasting_ability
}
damage <- function() {
sum(sample(1:6, (4+spell_level), replace = TRUE))
}
paste0("You attack for ", attack(), ", and do ", damage(), " points damage within 120 feet to a single target.")
#paste0(attack(), damage())
}
guiding_bolt()
ini <- function() {
die <- d20()
bonus <- 2
initiative <- die + bonus
paste0("Your initiative is ", initiative, " (", die, "+", bonus,").")
}
ini()
sacred_flame <- function() {
attack <- spell_save_DC
damage <- function() {
if(level)
}
paste0("Target needs to save against ",attack,", or takes ", d8(1), " points damage within 60 feet to a single target.")
}
sacred_flame()
spiritual_hammer <- function(spell_level) {
attack <- d20()
damage <- d8(1) + spellcasting_ability
paste0("You attack for ", attack, ", and do ", damage, "move SW 20 feet and think of bonus attack.")
}
loadedDie <- function(x) {
r <- sample(1:20, 1, replace = TRUE)
if (r >= 1 & r <= 5) {
r = 20
}
print(r)
}
loadedDie()
table(replicate(n = 20, loadedDie()))
wis()
save_wisdom()
save_wisdom
insight()
d20()
d20()
d20()
ini()
guiding_bolt()
d6()
guiding_bolt()
hammer()
hammer()
d6(1)
hammer()
hammer()
hammer <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:10, x, replace = TRUE)
}
paste0("You attack for ", attack()+5, ", and do ", damage(), " points damage.")
#paste0(attack(), damage())
}
hammer()
sam <- d20() + pb + wis
hammer <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:10, x, replace = TRUE)
}
paste0("You attack for ", attack()+5, ", and do ", damage(), " points damage.")
#paste0(attack(), damage())
}
hammer()
hammer()
guiding_bolt()
d20(3)
d20(3)
d20(3)
d20(3)
str_abi <- 1
mace <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:6, x, replace = TRUE)
}
paste0("You attack for ", attack() + profiency_bonus + str_abi + , ", and do ", damage()+1, " points damage.")
#paste0(attack(), damage())
}
mace()
mace <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:6, x, replace = TRUE)
}
paste0("You attack for ", attack() + profiency_bonus + str_abi, ", and do ", damage()+1, " points damage.")
#paste0(attack(), damage())
}
mace()
mace <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:6, x, replace = TRUE)
}
paste0("You attack for ", attack() + proficiency_bonus + str_abi, ", and do ", damage()+1, " points damage.")
#paste0(attack(), damage())
}
mace()
mace()
hammer <- function() {
d20()
d20()
d20()
d20()
d20()
d20()
d20()
d20()
library(dvn)
fields <- dvSearchFields()
2920*6
(2920*6)*.2
3168*6*.2
(3168*6)/2
(3168*6)/5
x <- read.csv("~/Downloads/Muntvondsten Engeland-Wales (alles).csv")
x <- read.csv("~/Downloads/Muntvondsten Engeland-Wales (alles).csv", row.names = FALSE)
x <- read.table("~/Downloads/Muntvondsten Engeland-Wales (alles).csv", header = FALSE)
`Muntvondsten.Engeland.Wales.(alles)` <- read.csv("~/Downloads/Muntvondsten Engeland-Wales (alles).csv", sep=";")
View(`Muntvondsten.Engeland.Wales.(alles)`)
? read.table
? read.table(0)
? read.table()
print("hello")
print("hello")
print("hello")
###
ability_modifier <- 5
proficiency_bonus <- 2
wisdom_modifier <- 3
level <- 3
spellcasting_ability <- proficiency_bonus + wisdom_modifier
spell_save_DC <- 8 + spellcasting_ability
str_abi <- 1
##
d4 <- function(x) {
sample(1:4, x, replace = TRUE)
}
d6 <- function(x) {
sample(1:6, x, replace = TRUE)
}
d6(4)
d8 <- function(x) {
sample(1:8, x, replace = TRUE)
}
d10 <- function(x) {
sample(1:10, x, replace = TRUE)
}
d12 <- function(x) {
sample(1:12, x, replace = TRUE)
}
d20 <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
d100 <- function(x=1) {
sample(1:100, x, replace = TRUE)
}
sam <- d20() + pb + wis
mace <- function() {
attack <- function(x=1) {
sample(1:20, x, replace = TRUE)
}
damage <- function(x=1) {
sample(1:6, x, replace = TRUE)
}
paste0("You attack for ", attack() + proficiency_bonus + str_abi, ", and do ", damage()+1, " points damage.")
#paste0(attack(), damage())
}
mace()
#hammer <- function() {
#        attack <- function(x=1) {
#                sample(1:20, x, replace = TRUE)
#        }
#        damage <- function(x=1) {
#                sample(1:10, x, replace = TRUE)
#        }
#        paste0("You attack for ", attack() + proficiency_bonus + str_abi, ", and do ", damage() + 1, " points damage.")
#        #paste0(attack(), damage())
#}
#hammer()
save_strength <- d20() + 1
save_dexterity <- d20() + 2
save_constitution <- d20() + 2
save_intelligence <- d20() + 2
save_wisdom <- d20() + 3 + proficiency_bonus
save_charisma <- d20() + 3 + proficiency_bonus
healing_word <- function() {
sum(sample(1:4, level, replace = TRUE)) + spellcasting_ability
}
healing_word()
cure_wounds <- function() {
sum(sample(1:8, level, replace = TRUE)) + ability_modifier
}
guiding_bolt <- function(spell_level = 1) {
#spell_level <- 1
attack <- function() {
sample(1:20, 1, replace = TRUE) + spellcasting_ability
}
damage <- function() {
sum(sample(1:6, (4+spell_level), replace = TRUE))
}
paste0("You attack for ", attack(), ", and do ", damage(), " points damage within 120 feet to a single target.")
#paste0(attack(), damage())
}
guiding_bolt()
ini <- function() {
die <- d20()
bonus <- 2
initiative <- die + bonus
paste0("Your initiative is ", initiative, " (", die, "+", bonus,").")
}
ini()
sacred_flame <- function() {
attack <- spell_save_DC
damage <- function() {
if(level)
}
paste0("Target needs to save against ",attack,", or takes ", d8(1), " points damage within 60 feet to a single target.")
}
sacred_flame()
spiritual_weapon <- function(spell_level) {
attack <- d20(1) + spellcasting_ability
damage <-  d8(1) + wisdom_modifier
paste0("You attack for ", attack, ", and do ", damage, " damage, move SW 20 feet and think of bonus attack.")
}
spiritual_weapon()
loadedDie <- function(x) {
r <- sample(1:20, 1, replace = TRUE)
if (r >= 1 & r <= 5) {
r = 20
}
print(r)
}
loadedDie()
table(replicate(n = 20, loadedDie()))
ini()
d20()
mace()
save_wisdom
ini()
sacred_flame()
sacred_flame
sacred_flame <- function() {
attack <- spell_save_DC
damage <- function() {
if(level)
}
paste0("Target needs to save against ",attack,", or takes ", d8(1), " points damage within 60 feet to a single target.")
}
sacred_flame()
guiding_bolt()
d20()
d8()
acred_flame <- function() {
attack <- spell_save_DC
paste0("Target needs to save against ",attack,", or takes ", d8(1), " points damage within 60 feet to a single target.")
}
sacred_flame()
sacred_flame <- function() {
attack <- spell_save_DC
paste0("Target needs to save against ",attack,", or takes ", d8(1), " points damage within 60 feet to a single target.")
}
sacred_flame()
spiritual_weapon()
spiritual_weapon()
constitution()
spiritual_weapon()
spiritual_weapon()
d20()
rm(list=ls())
setpath("~/git/IDS_R/")
setwd("~/git/IDS_R/")
ls
ls()
dir()
source('~/.active-rstudio-document', echo=TRUE)
install.packages("eha")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("skel14")
source('~/.active-rstudio-document', echo=TRUE)
rm(list = ls())
library(RCurl)
canada <- getURL("http://grlc.clariah-sdh.eculture.labs.vu.nl/CLARIAH/wp4-queries/can91_statusbybirthyear_5)
canada <- getURL("http://grlc.clariah-sdh.eculture.labs.vu.nl/CLARIAH/wp4-queries/can91_statusbybirthyear_5")
canada <- getURL("http://grlc.clariah-sdh.eculture.labs.vu.nl/CLARIAH/wp4-queries/can91_statusbybirthyear_5")
canada <- read.csv(textConnection(canada))
View(canada)
canada <- getURL("http://grlc.clariah-sdh.eculture.labs.vu.nl/CLARIAH/wp4-queries/can91_statusbybirthyear_1")
canada <- read.csv(textConnection(canada))
setwd("~/git/wp4-queries")
rm(list=ls())
library(RCurl)
library(texreg)
canada <- getURL("http://grlc.clariah-sdh.eculture.labs.vu.nl/CLARIAH/wp4-queries/can91_statusbybirthyear_5", httpheader = c(Accept = "text/csv"))
canada <- read.csv(textConnection(canada))
View(canada)
View(canada)
sweden <- getURL("http://grlc.clariah-sdh.eculture.labs.vu.nl/clariah/wp4-queries/swe90_statusbybirthyear", httpheader = c(Accept = "text/csv"))
sweden <- read.csv(textConnection(sweden))
fit_canada_base <- lm(log(hiscam) ~ log(gdppc), data=canada)
fit_canada <- lm(log(hiscam) ~ log(gdppc) + I(age^2) + age, data=canada)
summary(fit_canada_base)
summary(fit_canada)
fit_canada2 <- update(fit_canada, . ~ . + I(age*log(gdppc)))
summary(fit_canada)
summary(fit_canada2)
View(canada)
fit_sweden_base <- lm(log(hiscam) ~ log(gdppc), data=sweden)
fit_sweden <- lm(log(hiscam) ~ log(gdppc) + I(age^2) + age, data=sweden)
fit_sweden2 <- update(fit_sweden, . ~ . + I(age*log(gdppc)))
summary(fit_sweden2)
summary(fit_sweden)
summary(fit_sweden2)
summary(fit_canada2)
summary(fit_sweden2)
texreg::texreg(list(fit_canada2, fit_sweden2))
